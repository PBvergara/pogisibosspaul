/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author PAUL BRYAN
 */
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Hello extends javax.swing.JFrame {
  
 
    public Hello() {
        initComponents();
      ArrayList<String[]> accounts = getUserAccounts();
    showUserAccounts(accounts);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        Logout = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        addadmin = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Only");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        Logout.setText("Log out");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 102, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setText("HI ADMIN");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Password", "email", "Contact number"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Delete account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        edit.setText("Edit acc");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        addadmin.setText("Add Admin");
        addadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addadminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(80, 80, 80)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(275, 275, 275))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(addadmin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Logout)
                    .addComponent(Exit)
                    .addComponent(edit)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(addadmin)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private ArrayList<String[]> getUserAccounts() {
    ArrayList<String[]> accounts = new ArrayList<>();
    try (BufferedReader reader = new BufferedReader(new FileReader("user_data.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] accountInfo = line.split(",");
            accounts.add(accountInfo);
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    return accounts;
}
private void showUserAccounts(ArrayList<String[]> accounts) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing rows
    for (String[] account : accounts) {
        model.addRow(account);
    }
}
    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Are you sure you want to log out?", "Logout Confirmation", JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.YES_OPTION) {
        Login login = new Login();
        login.setVisible(true);
        dispose(); // Close the current JFrame
        
        // Update table with current data after logging out
        ArrayList<String[]> accounts = getUserAccounts();
        showUserAccounts(accounts);
    }
    }//GEN-LAST:event_LogoutActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
         int choice = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Exit Confirmation", JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.YES_OPTION) {
        System.exit(0);
    
    }
    }//GEN-LAST:event_ExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        // Ask for confirmation
        int choice = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this account?", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
        
        if (choice == JOptionPane.YES_OPTION) {
            // Get the data from the selected row
            String username = (String) model.getValueAt(selectedRow, 0);
            
            // Remove the selected row from the table
            model.removeRow(selectedRow);
            
            // Delete account from the user_data.txt file
            deleteAccountFromDataFile(username);
            
            JOptionPane.showMessageDialog(null, "Account deleted successfully!", "Deleted", JOptionPane.INFORMATION_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select an account to delete.", "No Account Selected", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        // Get the data from the selected row
        String oldUsername = (String) model.getValueAt(selectedRow, 0);
        String oldPassword = (String) model.getValueAt(selectedRow, 1);
        String oldEmail = (String) model.getValueAt(selectedRow, 2);
        String oldContactNumber = (String) model.getValueAt(selectedRow, 3);
        
        // Prompt the admin to enter new information
        String newUsername = JOptionPane.showInputDialog(this, "Enter new username:", oldUsername);
        String newPassword = JOptionPane.showInputDialog(this, "Enter new password:", oldPassword);
        String newEmail = JOptionPane.showInputDialog(this, "Enter new email:", oldEmail);
        String newContactNumber = JOptionPane.showInputDialog(this, "Enter new contact number:", oldContactNumber);
        
        // Update the table with the new information
        model.setValueAt(newUsername, selectedRow, 0);
        model.setValueAt(newPassword, selectedRow, 1);
        model.setValueAt(newEmail, selectedRow, 2);
        model.setValueAt(newContactNumber, selectedRow, 3);
        
        // Update the data file with the modified information
        updateAccountInDataFile(oldUsername, newUsername, newPassword, newEmail, newContactNumber);
        
        JOptionPane.showMessageDialog(this, "Account edited successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "Please select an account to edit.", "No Account Selected", JOptionPane.ERROR_MESSAGE);
    }
}

private void updateAccountInDataFile(String oldUsername, String newUsername, String newPassword, String newEmail, String newContactNumber) {
    try {
        // Read all accounts from the file
        ArrayList<String[]> accounts = getUserAccounts();
        
        // Update the account information
        for (String[] account : accounts) {
            if (account[0].equals(oldUsername)) {
                account[0] = newUsername;
                account[1] = newPassword;
                account[2] = newEmail;
                account[3] = newContactNumber;
                break;
            }
        }
        
        // Rewrite the updated list to the file
        BufferedWriter writer = new BufferedWriter(new FileWriter("user_data.txt"));
        for (String[] account : accounts) {
            writer.write(String.join(",", account) + "\n");
        }
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_editActionPerformed

    private void addadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addadminActionPerformed
    Addamin login = new Addamin();
    login.setVisible(true);
    dispose();
    }//GEN-LAST:event_addadminActionPerformed
 private void deleteAccountFromDataFile(String usernameToDelete) {
    try {
        // Read all accounts from the file
        ArrayList<String[]> accounts = getUserAccounts();
        
        // Remove the account to delete from the list
        accounts.removeIf(account -> account[0].equals(usernameToDelete));
        
        // Rewrite the updated list to the file
        BufferedWriter writer = new BufferedWriter(new FileWriter("user_data.txt"));
        for (String[] account : accounts) {
            writer.write(String.join(",", account) + "\n");
        }
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    public void setUsername(String username) {
      
 }
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hello().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JButton Logout;
    private javax.swing.JButton addadmin;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
